$prefixes: -webkit-, -moz-, -o-, "";

@mixin radius($size...) {
    @if length($size) == 1 {
        @each $prefix in $prefixes {
            #{$prefix}border-radius: $size;
        }
    } @else {
        @include customradius($size...);
    }
}

@mixin customradius($topLeft: 0, $topRight: 0, $bottomRight: 0, $bottomLeft: 0) {
    @each $prefix in $prefixes {
        @if $prefix == "-moz-" {
            @if $topLeft != 0 { -moz-border-radius-topleft: $topLeft; }
            @if $topRight != 0 { -moz-border-radius-topright: $topRight; }
            @if $bottomRight != 0 { -moz-border-radius-bottomright: $bottomRight; }
            @if $bottomLeft != 0 { -moz-border-radius-bottomleft: $bottomLeft; }
        } @else {
            @if $topLeft != 0 { #{$prefix}border-top-left-radius: $topLeft; }
            @if $topRight != 0 { #{$prefix}border-top-right-radius: $topRight; }
            @if $bottomRight != 0 { #{$prefix}border-bottom-right-radius: $bottomRight; }
            @if $bottomLeft != 0 { #{$prefix}border-bottom-left-radius: $bottomLeft; }
        }
    }
}

// border-radius

@mixin border-round($round) {
  @if length($round) == 1 {
      border-radius: $round+px;
  }
  @if length($round) == 2 {
      border-radius: nth($round, 1)+px nth($round, 2)+px;
  }
  @if length($round) == 3 {
      border-radius: nth($round, 1)+px nth($round, 2)+px nth($round, 3)+px;
  }
  @if length($round) == 4 {
      border-radius: nth($round, 1)+px nth($round, 2)+px nth($round, 3)+px nth($round, 4)+px;
  }
}

// BORDER RADIUS CUSTOM
@mixin circle($radius:50%) {
  border-radius: $radius;
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  -o-border-radius: $radius;
}


